#name: ci
#
#on:
#  push:
#    branches:
#      - 'main'
#
#jobs:
#  docker:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: Checkout
#        uses: actions/checkout@v4
#      -
#        name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      -
#        name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      -
#        name: Make script executable
#        run: chmod +x bump_version.sh
#      -
#        name: Bump version and build
#        run: |
#          new_version=$(./bump_version.sh)
#          echo "New version: $new_version"
#          latest_tag=$(docker inspect --format='{{index .RepoDigests 0}}' razumuhin/py:latest | awk -F@ '{print $2}')
#          docker buildx build -t razumuhin/py:$new_version .
#          docker push razumuhin/py:$new_version
#

name: Docker Build & Push

on:
  push:
    branches:
      - main  # Bu, ana dalınıza yapılan her push işlemi için çalışır. Dal ismini değiştirebilirsiniz.

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # GitHub'da repository'nizde bulunan bir secrets olarak Docker Hub kullanıcı adınızı eklemelisiniz.
        password: ${{ secrets.DOCKER_PASSWORD }}  # GitHub'da repository'nizde bulunan bir secrets olarak Docker Hub şifrenizi eklemelisiniz.

    - name: Build and push Docker image
      run: |
        docker build -t your_dockerhub_username/your_image_name:latest .
        docker push your_dockerhub_username/your_image_name:latest
