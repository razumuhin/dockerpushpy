#name: ci
#
#on:
#  push:
#    branches:
#      - 'main'
#
#jobs:
#  docker:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: Checkout
#        uses: actions/checkout@v4
#      -
#        name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      -
#        name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - 
#        name: Make script executable
#        run: chmod +x bump_version.sh
#
#      -
#        name: Bump version and build
#        run: |
#          new_version=$(./bump_version.sh)
#          echo "New version: $new_version"
#          docker buildx build -t razumuhin/py:$new_version .
#          docker push razumuhin/py:$new_version
#
#

name: Update and push Docker image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull current image from Docker Hub
        run: |
          docker pull razumuhin/py:latest

      - name: Build and push updated image
        run: |
          latest_tag=$(docker inspect --format='{{index .RepoDigests 0}}' razumuhin/py:latest | awk -F@ '{print $2}')
          new_tag=$((latest_tag + 1))
          docker build -t razumuhin/py:$new_tag .
          docker push razumuhin/py:$new_tag
